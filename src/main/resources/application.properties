# spring.application.name=Campus Event Management
# spring.jpa.show-sql=true
# spring.datasource.url=jdbc:h2:mem:campusdb
# spring.jpa.properties.hibernate.format_sql=true
# spring.jpa.hibernate.ddl-auto=create-drop

# spring.security.user.name=OleksandraSkoryk
# spring.security.user.password=123456
# spring.security.user.roles=ADMIN

# file.upload-dir=uploads

# spring.mail.host=smtp.gmail.com
# spring.mail.port=587
# spring.mail.username=skorykoleksandra@gmail.com
# spring.mail.password=cusv rkiv gkxw esth
# spring.mail.properties.mail.smtp.auth=true
# spring.mail.properties.mail.smtp.starttls.enable=true
# spring.mail.properties.mail.smtp.starttls.required=true

# server.port=8080

# Application
spring.application.name=Campus Event Management
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=update

# Use Heroku PostgreSQL
spring.datasource.url=${JDBC_DATABASE_URL}
spring.datasource.username=${JDBC_DATABASE_USERNAME}
spring.datasource.password=${JDBC_DATABASE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Spring Security (optional, for local testing you can keep defaults)
spring.security.user.name=${SPRING_SECURITY_USER_NAME:OleksandraSkoryk}
spring.security.user.password=${SPRING_SECURITY_USER_PASSWORD:123456}
spring.security.user.roles=ADMIN

# File upload
file.upload-dir=uploads

# Mail (use env variables for Heroku)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${SPRING_MAIL_USERNAME}
spring.mail.password=${SPRING_MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# Dynamic port for Heroku
server.port=${PORT:8080}




